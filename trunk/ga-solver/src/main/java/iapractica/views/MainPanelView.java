/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainPanel.java
 *
 * Created on Oct 27, 2012, 11:16:44 PM
 */
package iapractica.views;

import com.frre.cemami.utils.MathUtils;
import genetics.productos.exceptions.NoMateriaPrimaAddedException;
import iapractica.controllers.MainPanelController;
import iapractica.views.popups.PopUpFactory;
import java.awt.Color;
import java.awt.Component;
import java.util.LinkedList;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author Justo Vargas
 */
public class MainPanelView extends GenericView {
    
    private XYSeriesCollection xySeriesCollectionScatterPlot;
    private ChartPanel myChartPanelScatterPlot;
    private JFreeChart jfreeChartScatterPlot;
    private JFreeChart jfreeChartXYLinePLot;
    private XYSeriesCollection xySeriesCollectionLineXYPlot;
    private ChartPanel myChartPanelLinePlot;
    private LinkedList<JSpinner> spinnersCargaDatos = new LinkedList<JSpinner>();
    int iteracionesMaxima;
    double worstAptitudNumber = 0;
    private XYSeries series1;
    private XYSeries series2;
    private XYSeries series3;
    private boolean inPause;

    /**
     * Creates new form MainPanel
     */
    public MainPanelView() {
        initComponents();
        makeJFreChartPanel();
        inPause = false;
        this.playBtn.setText("Play");
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainContainer = new javax.swing.JPanel();
        simlationContainer = new javax.swing.JPanel();
        propertiesManager = new javax.swing.JPanel();
        tabPanel = new javax.swing.JTabbedPane();
        cargaDatos = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jSpinner3 = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jSpinner4 = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jSpinner5 = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jSpinner6 = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jSpinner7 = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        jSpinner8 = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        indivMax1 = new javax.swing.JSpinner();
        iteracionesMax1 = new javax.swing.JSpinner();
        operadoresGeneticos = new javax.swing.JPanel();
        seleccionPanel = new javax.swing.JPanel();
        Metodos = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        jSpinner13 = new javax.swing.JSpinner();
        seleccionPanel1 = new javax.swing.JPanel();
        Metodos3 = new javax.swing.JPanel();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        jCheckBox14 = new javax.swing.JCheckBox();
        jLabel15 = new javax.swing.JLabel();
        jSpinner14 = new javax.swing.JSpinner();
        seleccionPanel2 = new javax.swing.JPanel();
        Metodos4 = new javax.swing.JPanel();
        jCheckBox15 = new javax.swing.JCheckBox();
        jCheckBox16 = new javax.swing.JCheckBox();
        jCheckBox18 = new javax.swing.JCheckBox();
        jLabel16 = new javax.swing.JLabel();
        jSpinner15 = new javax.swing.JSpinner();
        simlationProperties = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        velocidad = new javax.swing.JSlider();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        playBtn = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        useChart = new javax.swing.JCheckBox();
        stadistic = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        statics = new javax.swing.JCheckBox();
        bestAptitud = new javax.swing.JLabel();
        worstAptitud = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        averageAptitud = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        population = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        age = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();
        chartPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(iapractica.IAPracticaApp.class).getContext().getResourceMap(MainPanelView.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        mainContainer.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        mainContainer.setName("mainContainer"); // NOI18N
        mainContainer.setLayout(new java.awt.GridLayout(1, 0));

        simlationContainer.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("simlationContainer.border.title"), javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP)); // NOI18N
        simlationContainer.setAutoscrolls(true);
        simlationContainer.setName("simlationContainer"); // NOI18N
        simlationContainer.setLayout(new java.awt.GridLayout(2, 0));

        propertiesManager.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("propertiesManager.border.title"))); // NOI18N
        propertiesManager.setName("propertiesManager"); // NOI18N
        propertiesManager.setLayout(new java.awt.GridLayout(1, 0));

        tabPanel.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        tabPanel.setAutoscrolls(true);
        tabPanel.setName("tabPanel"); // NOI18N

        cargaDatos.setName("cargaDatos"); // NOI18N
        cargaDatos.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 10, 0, 0);
        cargaDatos.add(jLabel3, gridBagConstraints);

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 20, 0, 0);
        cargaDatos.add(jLabel4, gridBagConstraints);

        jSpinner1.setName("jSpinner1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 0, 0, 0);
        cargaDatos.add(jSpinner1, gridBagConstraints);

        jSpinner2.setName("jSpinner2"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        cargaDatos.add(jSpinner2, gridBagConstraints);

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 20, 0, 0);
        cargaDatos.add(jLabel5, gridBagConstraints);

        jSpinner3.setName("jSpinner3"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        cargaDatos.add(jSpinner3, gridBagConstraints);

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 20, 0, 0);
        cargaDatos.add(jLabel6, gridBagConstraints);

        jSpinner4.setName("jSpinner4"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        cargaDatos.add(jSpinner4, gridBagConstraints);

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 20, 0, 0);
        cargaDatos.add(jLabel7, gridBagConstraints);

        jSpinner5.setName("jSpinner5"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 0, 0, 0);
        cargaDatos.add(jSpinner5, gridBagConstraints);

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 20, 0, 0);
        cargaDatos.add(jLabel8, gridBagConstraints);

        jSpinner6.setName("jSpinner6"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        cargaDatos.add(jSpinner6, gridBagConstraints);

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 20, 0, 0);
        cargaDatos.add(jLabel9, gridBagConstraints);

        jSpinner7.setName("jSpinner7"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        cargaDatos.add(jSpinner7, gridBagConstraints);

        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 20, 0, 0);
        cargaDatos.add(jLabel10, gridBagConstraints);

        jSpinner8.setName("jSpinner8"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        cargaDatos.add(jSpinner8, gridBagConstraints);

        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 20, 0, 0);
        cargaDatos.add(jLabel11, gridBagConstraints);

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 170, 116, 0);
        cargaDatos.add(jButton1, gridBagConstraints);

        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 23, 116, 26);
        cargaDatos.add(jButton2, gridBagConstraints);

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 20, 0, 0);
        cargaDatos.add(jLabel2, gridBagConstraints);

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 20, 0, 0);
        cargaDatos.add(jLabel1, gridBagConstraints);

        indivMax1.setName("indivMax1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 61;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 7, 0, 0);
        cargaDatos.add(indivMax1, gridBagConstraints);

        iteracionesMax1.setName("iteracionesMax1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 61;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 7, 0, 0);
        cargaDatos.add(iteracionesMax1, gridBagConstraints);

        tabPanel.addTab("Carga de Datos", cargaDatos);

        operadoresGeneticos.setName("operadoresGeneticos"); // NOI18N
        operadoresGeneticos.setLayout(new java.awt.GridLayout(1, 0));

        seleccionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("seleccionPanel.border.title"))); // NOI18N
        seleccionPanel.setName("seleccionPanel"); // NOI18N
        seleccionPanel.setLayout(new java.awt.GridBagLayout());

        Metodos.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("Metodos.border.title"))); // NOI18N
        Metodos.setName("Metodos"); // NOI18N
        Metodos.setLayout(new java.awt.GridLayout(3, 0));

        jCheckBox1.setText(resourceMap.getString("jCheckBox1.text")); // NOI18N
        jCheckBox1.setName("jCheckBox1"); // NOI18N
        Metodos.add(jCheckBox1);

        jCheckBox2.setText(resourceMap.getString("jCheckBox2.text")); // NOI18N
        jCheckBox2.setName("jCheckBox2"); // NOI18N
        Metodos.add(jCheckBox2);

        jCheckBox6.setText(resourceMap.getString("jCheckBox6.text")); // NOI18N
        jCheckBox6.setName("jCheckBox6"); // NOI18N
        Metodos.add(jCheckBox6);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 17;
        gridBagConstraints.ipady = -5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 5, 0);
        seleccionPanel.add(Metodos, gridBagConstraints);

        jCheckBox8.setText(resourceMap.getString("jCheckBox8.text")); // NOI18N
        jCheckBox8.setName("jCheckBox8"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 68, 0, 2);
        seleccionPanel.add(jCheckBox8, gridBagConstraints);

        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        seleccionPanel.add(jLabel12, gridBagConstraints);

        jSpinner13.setName("jSpinner13"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 159;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        seleccionPanel.add(jSpinner13, gridBagConstraints);

        operadoresGeneticos.add(seleccionPanel);

        seleccionPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("seleccionPanel1.border.title"))); // NOI18N
        seleccionPanel1.setName("seleccionPanel1"); // NOI18N
        seleccionPanel1.setLayout(new java.awt.GridBagLayout());

        Metodos3.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("Metodos3.border.title"))); // NOI18N
        Metodos3.setName("Metodos3"); // NOI18N
        Metodos3.setLayout(new java.awt.GridLayout(3, 0));

        jCheckBox11.setText(resourceMap.getString("jCheckBox11.text")); // NOI18N
        jCheckBox11.setName("jCheckBox11"); // NOI18N
        Metodos3.add(jCheckBox11);

        jCheckBox12.setText(resourceMap.getString("jCheckBox12.text")); // NOI18N
        jCheckBox12.setName("jCheckBox12"); // NOI18N
        Metodos3.add(jCheckBox12);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 17;
        gridBagConstraints.ipady = -5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 5, 0);
        seleccionPanel1.add(Metodos3, gridBagConstraints);

        jCheckBox14.setText(resourceMap.getString("jCheckBox14.text")); // NOI18N
        jCheckBox14.setName("jCheckBox14"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 68, 0, 2);
        seleccionPanel1.add(jCheckBox14, gridBagConstraints);

        jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        seleccionPanel1.add(jLabel15, gridBagConstraints);

        jSpinner14.setName("jSpinner14"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 159;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        seleccionPanel1.add(jSpinner14, gridBagConstraints);

        operadoresGeneticos.add(seleccionPanel1);

        seleccionPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("seleccionPanel2.border.title"))); // NOI18N
        seleccionPanel2.setName("seleccionPanel2"); // NOI18N
        seleccionPanel2.setLayout(new java.awt.GridBagLayout());

        Metodos4.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("Metodos4.border.title"))); // NOI18N
        Metodos4.setName("Metodos4"); // NOI18N
        Metodos4.setLayout(new java.awt.GridLayout(3, 0));

        jCheckBox15.setText(resourceMap.getString("jCheckBox15.text")); // NOI18N
        jCheckBox15.setName("jCheckBox15"); // NOI18N
        Metodos4.add(jCheckBox15);

        jCheckBox16.setText(resourceMap.getString("jCheckBox16.text")); // NOI18N
        jCheckBox16.setName("jCheckBox16"); // NOI18N
        Metodos4.add(jCheckBox16);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 17;
        gridBagConstraints.ipady = -5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 5, 0);
        seleccionPanel2.add(Metodos4, gridBagConstraints);

        jCheckBox18.setText(resourceMap.getString("jCheckBox18.text")); // NOI18N
        jCheckBox18.setName("jCheckBox18"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 68, 0, 2);
        seleccionPanel2.add(jCheckBox18, gridBagConstraints);

        jLabel16.setText(resourceMap.getString("jLabel16.text")); // NOI18N
        jLabel16.setName("jLabel16"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        seleccionPanel2.add(jLabel16, gridBagConstraints);

        jSpinner15.setName("jSpinner15"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 159;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        seleccionPanel2.add(jSpinner15, gridBagConstraints);

        operadoresGeneticos.add(seleccionPanel2);

        tabPanel.addTab("Ajuste de Operadores Geneticos", operadoresGeneticos);

        simlationProperties.setName("simlationProperties"); // NOI18N
        simlationProperties.setLayout(new java.awt.GridBagLayout());

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel5.border.title"))); // NOI18N
        jPanel5.setName("jPanel5"); // NOI18N
        jPanel5.setLayout(new java.awt.GridBagLayout());

        velocidad.setPaintLabels(true);
        velocidad.setPaintTicks(true);
        velocidad.setSnapToTicks(true);
        velocidad.setValue(100);
        velocidad.setName("velocidad"); // NOI18N
        velocidad.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                velocidadStateChanged(evt);
            }
        });
        velocidad.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                velocidadPropertyChange(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 522;
        gridBagConstraints.ipady = -7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 2);
        jPanel5.add(velocidad, gridBagConstraints);

        jLabel19.setForeground(resourceMap.getColor("jLabel19.foreground")); // NOI18N
        jLabel19.setText(resourceMap.getString("jLabel19.text")); // NOI18N
        jLabel19.setName("jLabel19"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel5.add(jLabel19, gridBagConstraints);

        jLabel20.setForeground(resourceMap.getColor("jLabel20.foreground")); // NOI18N
        jLabel20.setText(resourceMap.getString("jLabel20.text")); // NOI18N
        jLabel20.setName("jLabel20"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 466, 0, 0);
        jPanel5.add(jLabel20, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 0);
        simlationProperties.add(jPanel5, gridBagConstraints);

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setName("jPanel4"); // NOI18N
        jPanel4.setLayout(new java.awt.GridLayout(1, 0));

        jButton6.setText(resourceMap.getString("jButton6.text")); // NOI18N
        jButton6.setName("jButton6"); // NOI18N
        jPanel4.add(jButton6);

        playBtn.setText(resourceMap.getString("playBtn.text")); // NOI18N
        playBtn.setName("playBtn"); // NOI18N
        playBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playBtnMouseClicked(evt);
            }
        });
        playBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playBtnActionPerformed(evt);
            }
        });
        jPanel4.add(playBtn);

        jButton4.setText(resourceMap.getString("jButton4.text")); // NOI18N
        jButton4.setName("jButton4"); // NOI18N
        jPanel4.add(jButton4);

        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 308;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 15, 0, 0);
        simlationProperties.add(jPanel4, gridBagConstraints);

        useChart.setText(resourceMap.getString("useChart.text")); // NOI18N
        useChart.setName("useChart"); // NOI18N
        useChart.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                useChartItemStateChanged(evt);
            }
        });
        useChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useChartActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 12, 0);
        simlationProperties.add(useChart, gridBagConstraints);

        stadistic.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("stadistic.border.title"))); // NOI18N
        stadistic.setName("stadistic"); // NOI18N
        stadistic.setLayout(new java.awt.GridBagLayout());

        jLabel17.setText(resourceMap.getString("jLabel17.text")); // NOI18N
        jLabel17.setName("jLabel17"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        stadistic.add(jLabel17, gridBagConstraints);

        jLabel18.setText(resourceMap.getString("jLabel18.text")); // NOI18N
        jLabel18.setName("jLabel18"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 10, 0, 0);
        stadistic.add(jLabel18, gridBagConstraints);

        statics.setText(resourceMap.getString("statics.text")); // NOI18N
        statics.setName("statics"); // NOI18N
        statics.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                staticsItemStateChanged(evt);
            }
        });
        statics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staticsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 1, 0, 6);
        stadistic.add(statics, gridBagConstraints);

        bestAptitud.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bestAptitud.setText(resourceMap.getString("bestAptitud.text")); // NOI18N
        bestAptitud.setName("bestAptitud"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 19;
        gridBagConstraints.ipadx = 58;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 7, 0, 0);
        stadistic.add(bestAptitud, gridBagConstraints);

        worstAptitud.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        worstAptitud.setText(resourceMap.getString("worstAptitud.text")); // NOI18N
        worstAptitud.setName("worstAptitud"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 19;
        gridBagConstraints.ipadx = 58;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 7, 0, 0);
        stadistic.add(worstAptitud, gridBagConstraints);

        jLabel21.setText(resourceMap.getString("jLabel21.text")); // NOI18N
        jLabel21.setName("jLabel21"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        stadistic.add(jLabel21, gridBagConstraints);

        averageAptitud.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        averageAptitud.setText(resourceMap.getString("averageAptitud.text")); // NOI18N
        averageAptitud.setName("averageAptitud"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 10;
        gridBagConstraints.ipadx = 38;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        stadistic.add(averageAptitud, gridBagConstraints);

        jLabel23.setText(resourceMap.getString("jLabel23.text")); // NOI18N
        jLabel23.setName("jLabel23"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 10, 0, 0);
        stadistic.add(jLabel23, gridBagConstraints);

        population.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        population.setText(resourceMap.getString("population.text")); // NOI18N
        population.setName("population"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 10;
        gridBagConstraints.ipadx = 38;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 0, 0, 0);
        stadistic.add(population, gridBagConstraints);

        jLabel25.setText(resourceMap.getString("jLabel25.text")); // NOI18N
        jLabel25.setName("jLabel25"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 10, 22, 0);
        stadistic.add(jLabel25, gridBagConstraints);

        age.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        age.setText(resourceMap.getString("age.text")); // NOI18N
        age.setName("age"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.ipadx = 48;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 2, 22, 0);
        stadistic.add(age, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = -12;
        gridBagConstraints.ipady = -27;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 2, 0, 4);
        simlationProperties.add(stadistic, gridBagConstraints);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel7.border.title"))); // NOI18N
        jPanel7.setName("jPanel7"); // NOI18N
        jPanel7.setLayout(new java.awt.GridLayout(1, 0));

        jProgressBar1.setName("jProgressBar1"); // NOI18N
        jPanel7.add(jProgressBar1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 768;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        simlationProperties.add(jPanel7, gridBagConstraints);

        tabPanel.addTab("Propiedades Simulacion", simlationProperties);

        propertiesManager.add(tabPanel);

        simlationContainer.add(propertiesManager);

        chartPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("chartPanel.border.title"))); // NOI18N
        chartPanel.setAutoscrolls(true);
        chartPanel.setName("chartPanel"); // NOI18N
        chartPanel.setLayout(new java.awt.GridLayout(1, 0));
        simlationContainer.add(chartPanel);

        mainContainer.add(simlationContainer);

        getContentPane().add(mainContainer);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        for (JSpinner jSpinner : spinnersCargaDatos) {
            Integer number = (int) MathUtils.getRandomNumber(0, 1000);
            jSpinner.setValue(number);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int[] valores = new int[8];
        for (JSpinner jSpinner : spinnersCargaDatos) {
            try {
                if (jSpinner.getName().startsWith("j")) {
                    int value = Integer.parseInt(jSpinner.getValue().toString());
                    String name = jSpinner.getName().substring(jSpinner.getName().length() - 1);
                    int pos = Integer.parseInt(name);
                    valores[pos - 1] = value;
                }
            } catch (NumberFormatException e) {
                PopUpFactory.showErrorPopUP(this, "Los Campos deben ser solamente numeros");
                return;
            }
        }
        MainPanelController main = (MainPanelController) this.getController();
        main.addMateriaPrima(valores);
        
        main.setMaximumPopulation(Integer.parseInt(indivMax1.getValue().toString()));
        iteracionesMaxima = Integer.parseInt(iteracionesMax1.getValue().toString());
        main.setMaximumAge(iteracionesMaxima);
        PopUpFactory.showConfirmPopUP(this, "Valores Agregados con exito");
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void playBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playBtnActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_playBtnActionPerformed
    
    private void useChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useChartActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_useChartActionPerformed
    
    private void staticsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staticsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_staticsActionPerformed
    
    private void staticsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_staticsItemStateChanged
        // TODO add your handling code here:
        enableStadistics();
    }//GEN-LAST:event_staticsItemStateChanged
    
    private void useChartItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_useChartItemStateChanged
        // TODO add your handling code here:
        boolean value = useChart.isSelected();
        chartPanel.setEnabled(value);
        jfreeChartScatterPlot.setNotify(value);
        this.chartPanel.setEnabled(value);
    }//GEN-LAST:event_useChartItemStateChanged
    
    private void velocidadPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_velocidadPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_velocidadPropertyChange
    
    private void velocidadStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_velocidadStateChanged
        // TODO add your handling code here:
        MainPanelController main = (MainPanelController) this.getController();
        if (main != null) {
            main.setSimulationVelocity(this.velocidad.getValue());
        }
    }//GEN-LAST:event_velocidadStateChanged
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        MainPanelController main = (MainPanelController) this.getController();
        main.destroyCurrentSimulation();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void playBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playBtnMouseClicked
        // TODO add your handling code here:
        MainPanelController main = (MainPanelController) this.getController();
        
 
            if (!main.threadIsRunning()) {
                try {
                    main.startSimulation();
                } catch (NoMateriaPrimaAddedException ex) {
                    PopUpFactory.showErrorPopUP(this, "No agresgaste materia prima para comenzar con la simulacion");
                }
            } else {
                inPause = !inPause;
                if (inPause){
                    this.playBtn.setText("Pause");
                } else {
                    this.playBtn.setText("Play");
                }
                main.pauseSimulation(inPause);
            }
        
    }//GEN-LAST:event_playBtnMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Metodos;
    private javax.swing.JPanel Metodos3;
    private javax.swing.JPanel Metodos4;
    private javax.swing.JLabel age;
    private javax.swing.JLabel averageAptitud;
    private javax.swing.JLabel bestAptitud;
    private javax.swing.JPanel cargaDatos;
    private javax.swing.JPanel chartPanel;
    private javax.swing.JSpinner indivMax1;
    private javax.swing.JSpinner iteracionesMax1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox18;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner13;
    private javax.swing.JSpinner jSpinner14;
    private javax.swing.JSpinner jSpinner15;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JSpinner jSpinner4;
    private javax.swing.JSpinner jSpinner5;
    private javax.swing.JSpinner jSpinner6;
    private javax.swing.JSpinner jSpinner7;
    private javax.swing.JSpinner jSpinner8;
    private javax.swing.JPanel mainContainer;
    private javax.swing.JPanel operadoresGeneticos;
    private javax.swing.JButton playBtn;
    private javax.swing.JLabel population;
    private javax.swing.JPanel propertiesManager;
    private javax.swing.JPanel seleccionPanel;
    private javax.swing.JPanel seleccionPanel1;
    private javax.swing.JPanel seleccionPanel2;
    private javax.swing.JPanel simlationContainer;
    private javax.swing.JPanel simlationProperties;
    private javax.swing.JPanel stadistic;
    private javax.swing.JCheckBox statics;
    private javax.swing.JTabbedPane tabPanel;
    private javax.swing.JCheckBox useChart;
    private javax.swing.JSlider velocidad;
    private javax.swing.JLabel worstAptitud;
    // End of variables declaration//GEN-END:variables

    public JPanel getChartPanel() {
        return chartPanel;
    }
    
    public void addPanel(JPanel panel) {
        this.chartPanel.add(panel);
        this.pack();
    }
    
    @Override
    public void reset() {
    }
    
    private void makeJFreChartPanel() {
        myChartPanelScatterPlot = createChartPanel();
        myChartPanelLinePlot = createLineChartPanel();
        this.chartPanel.add(myChartPanelScatterPlot);
        this.chartPanel.add(myChartPanelLinePlot);
    }
    
    private ChartPanel createChartPanel() {
        jfreeChartScatterPlot = ChartFactory.createScatterPlot(
                "Poblacion", "Individuos", "Fitness Value", createSampleData(),
                PlotOrientation.VERTICAL, true, true, false);
        XYPlot xyScatterPlot = (XYPlot) jfreeChartScatterPlot.getPlot();
        xyScatterPlot.setDomainCrosshairVisible(true);
        xyScatterPlot.setRangeCrosshairVisible(true);
        NumberAxis domain = (NumberAxis) xyScatterPlot.getDomainAxis();
        domain.setVerticalTickLabels(true);
        return new ChartPanel(jfreeChartScatterPlot);
    }
    
    private ChartPanel createLineChartPanel() {
        /// create the chart...
        jfreeChartXYLinePLot = ChartFactory.createXYLineChart(
                "Aptitudes", // chart title
                "Valor", // x axis label
                "Iteraciones", // y axis label
                createLineXYSampleData(), // data
                PlotOrientation.VERTICAL,
                true, // include legend
                true, // tooltips
                false // urls
                );
        
        XYPlot xyScatterPlot = (XYPlot) jfreeChartXYLinePLot.getPlot();
        xyScatterPlot.setDomainCrosshairVisible(true);
        xyScatterPlot.setRangeCrosshairVisible(true);
        NumberAxis domain = (NumberAxis) xyScatterPlot.getDomainAxis();
        domain.setVerticalTickLabels(true);
        xyScatterPlot.getRenderer().setSeriesPaint(0, Color.RED);
        xyScatterPlot.getRenderer().setSeriesPaint(1, Color.BLACK);
        xyScatterPlot.getRenderer().setSeriesPaint(2, Color.BLUE);
        return new ChartPanel(jfreeChartXYLinePLot);
    }
    
    private XYDataset createSampleData() {
        xySeriesCollectionScatterPlot = new XYSeriesCollection();
        return xySeriesCollectionScatterPlot;
    }
    
    private XYDataset createLineXYSampleData() {
        xySeriesCollectionLineXYPlot = new XYSeriesCollection();
        series1 = new XYSeries("Best Fitness");
        series2 = new XYSeries("Worst Fitness");
        series3 = new XYSeries("Average Fitness");
        xySeriesCollectionLineXYPlot.addSeries(series1);
        xySeriesCollectionLineXYPlot.addSeries(series2);
        xySeriesCollectionLineXYPlot.addSeries(series3);
        return xySeriesCollectionLineXYPlot;
    }
    
    public void updateChart(final Double average, final int theAge, final LinkedList<Double> data) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    
                    Double best = data.get(0);
                    Double localWorst = data.get(data.size() - 1);
                    
                    if (statics.isSelected()) {
                        bestAptitud.setText(best.toString());
                        if (localWorst > worstAptitudNumber) {
                            worstAptitud.setText(localWorst.toString());
                            worstAptitudNumber = localWorst;
                        }
                        String promedio = average.toString();
                        int hasDot = promedio.indexOf(".");
                        if ((hasDot > 0) && (promedio.length() > hasDot + 3)) {
                            promedio = promedio.substring(0, hasDot + 3);
                        }
                        averageAptitud.setText(promedio);
                        population.setText(String.valueOf(data.size()));
                        age.setText(theAge + "/" + iteracionesMaxima);
                    }
                    
                    if (useChart.isSelected()) {
                        series1.add(theAge, best);
                        series2.add(theAge, localWorst);
                        series3.add(theAge, average);
                    }
                    
                    updateScatterPlot();
                } catch (Exception e) {
                    logguer.logError(e.getClass(), e.getMessage());
                }
            }
            
            private void updateScatterPlot() {
                if (useChart.isSelected()) {
                    if (xySeriesCollectionScatterPlot.getSeriesCount() > 3) {
                        xySeriesCollectionScatterPlot.removeSeries(0);
                    }
                    XYSeries series = new XYSeries("Age " + theAge);
                    for (int i = 0; i < data.size(); i++) {
                        Double myData = data.get(i);
                        double x = i;
                        double y = myData;
                        series.add(x, y);
                    }
                    xySeriesCollectionScatterPlot.addSeries(series);
                }
            }
        });
        
        
    }
    
    private void init() {
        //set tab titles
        this.tabPanel.setTitleAt(0, "Carga de Datos");
        this.tabPanel.setTitleAt(2, "Propiedades Simulacion");
        this.tabPanel.setTitleAt(1, "Ajuste de Operadores");
        this.useChart.setSelected(true);
        this.statics.setSelected(true);
        enableStadistics();
        //set  data for the validators
        Component[] comps = cargaDatos.getComponents();
        for (int i = 0; i < comps.length; i++) {
            Component component = comps[i];
            if (component instanceof JSpinner) {
                spinnersCargaDatos.add((JSpinner) component);
            }
        }
        this.velocidad.setValue(10);
        
    }
    
    private void enableStadistics() {
        boolean value = statics.isSelected();
        Component[] comps = stadistic.getComponents();
        for (int i = 0; i < comps.length; i++) {
            Component component = comps[i];
            if (!component.equals(statics)) {
                component.setEnabled(value);
            }
        }
    }
    
    public void updateProgress(int progress) {
        this.jProgressBar1.setValue(progress);
    }
}
